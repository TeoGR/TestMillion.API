services:
  api:
    build:
      context: .
      dockerfile: TestMillion.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/firebase_credentials
      ConnectionStrings__DefaultConnection: "Server=db;Database=TestMillionDb;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;"
      ASPNETCORE_URLS: http://+:8080
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - source: firebase_credentials
        target: firebase_credentials
        mode: 0444
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/Million/HealthCheck"]
      interval: 10s
      timeout: 3s
      retries: 10

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P \"$SA_PASSWORD\" -C -Q \"SELECT 1\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

secrets:
  firebase_credentials:
    file: ./secrets/firebase_credentials.json

volumes:
  mssql_data:
